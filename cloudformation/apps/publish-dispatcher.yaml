AWSTemplateFormatVersion: '2010-09-09'

Description: Create the Compute resources for the AEM Publish Dispatcher

Parameters:

  ComputeStackPrefixParameter:
    Type: String
    Description: The AEM Stack Compute Resources Stack Prefix

  SSLCertificateARNParameter:
    Type: String
    Description: The ARN for SSL Certificate

  PublishDispatcherLoadBalancerHealthCheckTargetParameter:
    Type: String
    Description: AEM Publish Dispatcher ELB Health Check Target

  PublishDispatcherELBSubnetAParameter:
    Type: AWS::EC2::Subnet::Id
    Description: The Publish Dispatcher ELB Subnet in Availability Zone A

  PublishDispatcherELBSubnetBParameter:
    Type: AWS::EC2::Subnet::Id
    Description: The Publish Dispatcher ELB Subnet in Availability Zone B

  PublishDispatcherInstanceProfileParameter:
    Type: String
    Description: The Publish Dispatcher Instance Profile

  PublishDispatcherImageParameter:
    Type: AWS::EC2::Image::Id
    Description: The Publish Dispatcher Image Id

  PublishDispatcherInstanceTypeParameter:
    Type: String
    Description: The Publish Dispatcher Instance Type

  ComputeKeyPairNameParameter:
    Type: AWS::EC2::KeyPair::KeyName
    Description: The Compute Resources Key Pair Name

  PublishDispatcherASGAvailabilityZoneListParameter:
    Type: List<AWS::EC2::AvailabilityZone::Name>
    Description: The Publish Dispatcher Availability Zone List

  PublishDispatcherASGSubnetListParameter:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The Publish Dispatcher Subnets

  PublishDispatcherASGMaxSizeParameter:
    Type: String
    Description: The Publish Dispatcher Auto Scaling Group Maximum Size

  PublishDispatcherASGMinSizeParameter:
    Type: String
    Description: The Publish Dispatcher Auto Scaling Group Minimum Size

  PublishDispatcherTagNameParameter:
    Type: String
    Description: The Publish Dispatcher Name Tag

  ApplicationVersionParameter:
    Type: String
    Description: The Application Version Number

  PublishDispatcherLoadBalancerTagNameParameter:
    Type: String
    Description: The Publish Dispatcher Load Balancer Name Tag

  RolesStackNameParameter:
    Type: String
    Description: The AEM Roles Stack Name

  SecurityGroupsStackNameParameter:
    Type: String
    Description: The AEM Security Groups Stack Name

  MessagingStackNameParameter:
    Type: String
    Description: The AEM Messaging Stack Name

  InboundFromBastionHostSecurityGroupParameter:
    Type: String
    Description: Inbound Bound from Bastion Host Security Group Id

  InitScriptS3UriParameter:
    Type: String
    Description: Initialization Script executed via the User Data

Resources:


  PublishDispatcherLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      ConnectionDrainingPolicy:
        Enabled: true
        Timeout: 300
      CrossZone: true
      HealthCheck:
        Target:
          Ref: PublishDispatcherLoadBalancerHealthCheckTargetParameter
        HealthyThreshold: '2'
        UnhealthyThreshold: '2'
        Interval: '30'
        Timeout: '5'
      Listeners:
      - LoadBalancerPort: '80'
        InstancePort: '80'
        Protocol: HTTP
      - LoadBalancerPort: '443'
        Protocol: HTTPS
        InstancePort: '443'
        InstanceProtocol: HTTPS
        SSLCertificateId:
          Ref: SSLCertificateARNParameter
      Scheme: internet-facing
      SecurityGroups:
      - Fn::ImportValue:
          Fn::Sub: ${ComputeStackPrefixParameter}-${SecurityGroupsStackNameParameter}-PublishDispatcherELBSecurityGroup
      Subnets:
      - Ref: PublishDispatcherELBSubnetAParameter
      - Ref: PublishDispatcherELBSubnetBParameter
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${PublishDispatcherLoadBalancerTagNameParameter}
      - Key: Stack Prefix
        Value:
          Ref: ComputeStackPrefixParameter

  PublishDispatcherLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: false
      BlockDeviceMappings:
      - DeviceName: /dev/sda1
        Ebs:
          DeleteOnTermination: true
          VolumeSize: 10
          VolumeType: gp2
      - DeviceName: /dev/sdb
        Ebs:
          DeleteOnTermination: true
          VolumeSize: 10
          VolumeType: gp2
      IamInstanceProfile:
        Ref: PublishDispatcherInstanceProfileParameter
      ImageId:
        Ref: PublishDispatcherImageParameter
      InstanceMonitoring: false
      InstanceType:
        Ref: PublishDispatcherInstanceTypeParameter
      KeyName:
        Ref: ComputeKeyPairNameParameter
      SecurityGroups:
      - Fn::ImportValue:
          Fn::Sub: ${ComputeStackPrefixParameter}-${SecurityGroupsStackNameParameter}-PublishDispatcherSecurityGroup
      - Ref: InboundFromBastionHostSecurityGroupParameter
# TODO: Implement versioning for init.sh e.g. .../aem-stack-builder/init/${initVersion}/init-${initVersion}.sh
      UserData:
        Fn::Base64:
          Fn::Sub: "#!/bin/bash -x mkdir /tmp/aem-stack-builder aws s3 cp ${InitScriptS3UriParameter}\
            \ /tmp/aem-stack-builder/init.sh chmod 755 /tmp/aem-stack-builder/init.sh\
            \ su - ec2-user -c \"/tmp/aem-stack-builder/init.sh\"\n" # TODO: change to ELB Health Check Type once up and running
  PublishDispatcherAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
        Ref: PublishDispatcherASGAvailabilityZoneListParameter
      HealthCheckGracePeriod: 900
      HealthCheckType: EC2
      LaunchConfigurationName:
        Ref: PublishDispatcherLaunchConfiguration
      LoadBalancerNames:
      - Ref: PublishDispatcherLoadBalancer
      MaxSize:
        Ref: PublishDispatcherASGMaxSizeParameter
      MinSize:
        Ref: PublishDispatcherASGMinSizeParameter
      NotificationConfigurations:
      - NotificationTypes:
        - autoscaling:EC2_INSTANCE_LAUNCH
        - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
        - autoscaling:EC2_INSTANCE_TERMINATE
        - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
        TopicARN:
          Fn::ImportValue:
            Fn::Sub: ${ComputeStackPrefixParameter}-${MessagingStackNameParameter}-AEMASGEventTopic
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${PublishDispatcherTagNameParameter} (${ComputeStackPrefixParameter})
        PropagateAtLaunch: true
      - Key: Stack Prefix
        Value:
          Ref: ComputeStackPrefixParameter
        PropagateAtLaunch: true
      - Key: Component
        Value: aem-publish-dispatcher
        PropagateAtLaunch: true
      - Key: Application Version
        Value:
          Ref: ApplicationVersionParameter
        PropagateAtLaunch: true
      VPCZoneIdentifier:
        Ref: PublishDispatcherASGSubnetListParameter

Outputs:

  PublishDispatcherLoadBalancer:
    Value:
      Ref: PublishDispatcherLoadBalancer
    Description: The Publish Dispatcher Load Balancer

  PublishDispatcherLoadBalancerDNSName:
    Value:
      Fn::GetAtt: [PublishDispatcherLoadBalancer, DNSName]
    Export:
      Name:
        Fn::Sub : ${AWS::StackName}-LoadBalancerDNSName
    Description: The Publish Dispatcher Load Balancer DNSName

  PublishDispatcherLaunchConfiguration:
    Value:
      Ref: PublishDispatcherLaunchConfiguration
    Description: The Publish Dispatcher Launch Configuration

  PublishDispatcherAutoScalingGroup:
    Value:
      Ref: PublishDispatcherAutoScalingGroup
    Description: The Publish Dispatcher Auto Scaling Group
