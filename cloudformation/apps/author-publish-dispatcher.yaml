---
AWSTemplateFormatVersion: "2010-09-09"

Description: Create the Compute resources for the AEM Author Publish Dispatcher

Parameters:

  ComputeStackPrefixParameter:
    Type: String
    Description: The AEM Stack Compute Resources Stack Prefix

  NetworkStackPrefixParameter:
    Type: String
    Description: The AEM Stack Network Resources Stack Prefix

  AuthorPublishDispatcherImageId:
    Type: AWS::EC2::Image::Id
    Description: AMI Id used for the Host

  AuthorPublishDispatcherInstanceType:
    Type: String
    Description: The Author Publish Dispatcher Instance Type

  ComputeKeyPairNameParameter:
    Type: AWS::EC2::KeyPair::KeyName
    Description: The Compute Resources Key Pair Name

  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: The VPC that the Host will reside

  AuthorPublishDispatcherSubnet:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet Ids the Host Will be Launched into

  DataBucketNameParameter:
    Type: String
    Description: Bucket name that stores Stack data files

  AemAwsStackProvisionerVersionParameter:
    Type: String
    Description: AEM AWS Stack Provisioner version number

  AssociatePublicIpAddressParameter:
    Type: String
    Description: Add Public IP Address to instance

  Route53HostedZoneNameParameter:
    Type: String
    Description: Route53 Hosted Zone Name the Record Set will be Created in

  AuthorPublishDispatcherDNSRecordSetNameParameter:
    Type: String
    Description: Author DNS Record Set Name

  DNSRecordSetTTL:
    Type: String
    Description: Record Set TTL value

Resources:

  # AuthorPublishDispatcher Security Group
  AuthorPublishDispatcherSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: AuthorPublishDispatcher Security Group
      Tags:
        - Key: Name
          Value: AEM Author Publish Dispatcher Security Group
        - Key: StackPrefix
          Value:
            Ref: ComputeStackPrefixParameter
      VpcId:
        Ref: VPCId

  # Allow tcp on ports 22
  AuthorPublishDispatcherSecurityGroupIngress0:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: '0.0.0.0/0'
      FromPort: '22'
      GroupId:
        Ref: AuthorPublishDispatcherSecurityGroup
      IpProtocol: tcp
      ToPort: '22'

  # Allow tcp on ports 80
  AuthorPublishDispatcherSecurityGroupIngress1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: '0.0.0.0/0'
      FromPort: '80'
      GroupId:
        Ref: AuthorPublishDispatcherSecurityGroup
      IpProtocol: tcp
      ToPort: '80'

  # Allow tcp on ports 443
  AuthorPublishDispatcherSecurityGroupIngress2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: '0.0.0.0/0'
      FromPort: '443'
      GroupId:
        Ref: AuthorPublishDispatcherSecurityGroup
      IpProtocol: tcp
      ToPort: '443'

  # Allow tcp on ports 4502, 4503
  AuthorPublishDispatcherSecurityGroupIngress3:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: '0.0.0.0/0'
      FromPort: '4502'
      GroupId:
        Ref: AuthorPublishDispatcherSecurityGroup
      IpProtocol: tcp
      ToPort: '4503'

  # Allow tcp on ports 5432, 5433
  AuthorPublishDispatcherSecurityGroupIngress4:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: '0.0.0.0/0'
      FromPort: '5432'
      GroupId:
        Ref: AuthorPublishDispatcherSecurityGroup
      IpProtocol: tcp
      ToPort: '5433'


  AuthorPublishDispatcherRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Policies:
        - PolicyName: AuthorPublishDispatcherRolePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:Describe*
                  - ec2:AttachVolume
                  - ec2:CreateVolume
                  - ec2:DetachVolume
                  - ec2:CreateSnapshot
                  - ec2:CreateTags
                  - ec2:ModifyInstanceAttribute
                  - cloudwatch:PutMetricData
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
                  - s3:Put*
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:*
                Resource:
                  - arn:aws:logs:*:*:*
      RoleName: !Sub ${ComputeStackPrefixParameter}-AuthorPublishDispatcherStackPublishRole

  AuthorPublishDispatcherInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - Ref: AuthorPublishDispatcherRole

  AuthorPublishDispatcher:
    Type: "AWS::EC2::Instance"
    Properties:
      IamInstanceProfile:
        Ref: AuthorPublishDispatcherInstanceProfile
      ImageId:
        Ref: AuthorPublishDispatcherImageId
      InstanceType:
        Ref: AuthorPublishDispatcherInstanceType
      KeyName:
        Ref: ComputeKeyPairNameParameter
      NetworkInterfaces:
        -
          AssociatePublicIpAddress:
            Ref: AssociatePublicIpAddressParameter
          DeviceIndex: "0"
          GroupSet:
            - Ref: AuthorPublishDispatcherSecurityGroup
          SubnetId:
            Ref: AuthorPublishDispatcherSubnet
      Tags:
        - Key: StackPrefix
          Value:
            Ref: ComputeStackPrefixParameter
        - Key: Name
          Value: AuthorPublishDispatcher
        - Key: Component
          Value: author-publish-dispatcher
      UserData:
        Fn::Base64:
          Fn::Sub: "#!/bin/bash -x\n\
            \ source /etc/profile\n\
            \ mkdir -p /opt/shinesolutions/aem-aws-stack-builder/\n\
            \ aws s3 cp s3://${DataBucketNameParameter}/${ComputeStackPrefixParameter}/stack-init.sh /opt/shinesolutions/aem-aws-stack-builder/stack-init.sh\n\
            \ chmod 755 /opt/shinesolutions/aem-aws-stack-builder/stack-init.sh\n\
            \ /opt/shinesolutions/aem-aws-stack-builder/stack-init.sh ${DataBucketNameParameter} ${ComputeStackPrefixParameter} author-publish-dispatcher ${AemAwsStackProvisionerVersionParameter}\n"

  AuthorPublishDispatcherRoute53RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Ref Route53HostedZoneNameParameter
      Name:
        Fn::Sub: ${ComputeStackPrefixParameter}-${AuthorPublishDispatcherDNSRecordSetNameParameter}.${Route53HostedZoneNameParameter}
      ResourceRecords:
        - Fn::GetAtt: [ AuthorPublishDispatcher, PrivateIp ]
      TTL: !Ref DNSRecordSetTTL
      Type: A
