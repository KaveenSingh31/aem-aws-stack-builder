---
- name: AEM Chaos Monkey CloudFormation Stack
  hosts: all
  gather_facts: no
  connection: local

  tasks:
    - name: Get AEM Stack VPC
      ec2_vpc_net_facts:
        region: "{{ aws.region }}"
        filters:
          "tag:Name": "{{ ec2_vpc.tag_name }}"
      register: aem_stack_vpc
      tags:
      - create

    - name: Get Chaos Monkey Subnet A
      ec2_vpc_subnet_facts:
        region: "{{ aws.region }}"
        filters:
          "tag:Name": "{{ network.tool.subnet_a.tag_name }}"
          vpc-id: "{{ aem_stack_vpc.vpcs.0.id }}"
      register: chaos_monkey_subnet_a
      tags:
      - create

    - name: Get Chaos Monkey Subnet B
      ec2_vpc_subnet_facts:
        region: "{{ aws.region }}"
        filters:
          "tag:Name": "{{ network.tool.subnet_b.tag_name }}"
          vpc-id: "{{ aem_stack_vpc.vpcs.0.id }}"
      register: chaos_monkey_subnet_b
      tags:
      - create

    - name: Get Chaos Monkey AMI
      ec2_ami_find:
        region: "{{ aws.region }}"
        ami_tags:
          component: java
          version: "{{ java.ami_version }}"
        sort: creationDate
        sort_order: descending
        sort_end: 1
      register: chaos_monkey_ami
      tags:
      - create

    - name: Create AEM Chaos Monkey Stack
      cloudformation:
        stack_name: "{{ stack_moniker }}-{{ chaos_monkey.stack_name }}"
        region: "{{ aws.region }}"
        state: present
        disable_rollback: true
        template: "../cloudformation/specific/chaos-monkey.yaml"
        template_parameters:
          ComputeStackMonikerParameter: "{{ stack_moniker }}"
          ChaosMonkeyImageParameter: "{{ chaos_monkey_ami.results[0].ami_id }}"
          ChaosMonkeyInstanceTypeParameter: "{{ chaos_monkey.instance_type }}"
          ComputeKeyPairNameParameter: "{{ compute.key_pair_name }}"
          ChaosMonkeyASGAvailabilityZoneListParameter: "{{ aws.availability_zone_a }}, {{ aws.availability_zone_b }}"
          ChaosMonkeyASGSubnetListParameter: "{{ chaos_monkey_subnet_a.subnets.0.id }}, {{ chaos_monkey_subnet_b.subnets.0.id }}"
          ChaosMonkeyTagNameParameter: "{{ chaos_monkey.tag_name }}"
          ApplicationVersionParameter: "{{ compute.application_version }}"
          RolesStackNameParameter: "{{ roles.stack_name }}"
          SecurityGroupsStackNameParameter: "{{ security_groups.stack_name }}"
          InboundFromBastionHostSecurityGroupParameter: "{{ inbound_from_bastion_host_security_group }}"
      tags:
      - create

    - name: Delete AEM Chaos Monkey Stack
      cloudformation:
        stack_name: "{{ stack_moniker }}-{{ chaos_monkey.stack_name }}"
        region: "{{ aws.region }}"
        state: absent
      tags:
      - delete
