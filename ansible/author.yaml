---
- name: AEM Author CloudFormation Stack
  hosts: all
  gather_facts: no
  connection: local

  tasks:

    - name: Get AEM Stack IAM Server Certificate
      iam_server_certificate_facts:
        name: "{{ compute.certificate_name }}"
      register: aem_stack_certificate
      tags:
      - create

    - name: Get AEM Stack VPC
      ec2_vpc_net_facts:
        region: "{{ aws.region }}"
        filters:
          "tag:Name": "{{ ec2_vpc.tag_name }}"
      register: aem_stack_vpc
      tags:
      - create

    - name: Get Author ELB Security Group
      ec2_group_facts:
        region: "{{ aws.region }}"
        filters:
          "tag:Name": "{{ security_groups.author_elb.tag_name }}"
          "tag:Stack Moniker": "{{ compute.stack_moniker }}"
          vpc-id: "{{ aem_stack_vpc.vpcs.0.id }}"
      register: author_elb_security_group
      tags:
      - create

    - name: Get Author Subnet A
      ec2_vpc_subnet_facts:
        region: "{{ aws.region }}"
        filters:
          "tag:Name": "{{ network.author.subnet_a.tag_name }}"
          vpc-id: "{{ aem_stack_vpc.vpcs.0.id }}"
      register: author_subnet_a
      tags:
      - create

    - name: Get Author Subnet B
      ec2_vpc_subnet_facts:
        region: "{{ aws.region }}"
        filters:
          "tag:Name": "{{ network.author.subnet_b.tag_name }}"
          vpc-id: "{{ aem_stack_vpc.vpcs.0.id }}"
      register: author_subnet_b
      tags:
      - create

    - name: Get Author Security Group
      ec2_group_facts:
        region: "{{ aws.region }}"
        filters:
          "tag:Name": "{{ security_groups.author.tag_name }}"
          "tag:Stack Moniker": "{{ compute.stack_moniker }}"
          vpc-id: "{{ aem_stack_vpc.vpcs.0.id }}"
      register: author_security_group
      tags:
      - create

    - name: Get Author AMI
      ec2_ami_find:
        region: "{{ aws.region }}"
        ami_tags:
          component: author
          version: "{{ author.ami_version }}"
        sort: creationDate
        sort_order: descending
        sort_end: 1
      register: author_ami
      tags:
      - create

    - name: Create AEM Author Stack
      cloudformation:
        stack_name: "{{ compute.stack_moniker }}-{{ author.stack_name }}"
        region: "{{ aws.region }}"
        state: present
        disable_rollback: true
        template: "../cloudformation/specific/author.yaml"
        template_parameters:
          ComputeStackMonikerParameter: "{{ compute.stack_moniker }}"
          SSLCertificateARNParameter: "{{ aem_stack_certificate.results[compute.certificate_name].arn }}"
          AuthorLoadBalancerHealthCheckTargetParameter: "{{ author.elb_health_check }}"
          AuthorELBSecurityGroupListParameter: "{{ author_elb_security_group.security_groups.0.group_id }}"
          AuthorSubnetAParameter: "{{ author_subnet_a.subnets.0.id }}"
          AuthorSubnetBParameter: "{{ author_subnet_b.subnets.0.id }}"
          AuthorImageParameter: "{{ author_ami.results[0].ami_id }}"
          AuthorInstanceTypeParameter: "{{ author.instance_type }}"
          ComputeKeyPairNameParameter: "{{ compute.key_pair_name }}"
          AuthorSecurityGroupParameter: "{{ author_security_group.security_groups.0.group_id }}"
          AuthorTagNameParameter: "{{ author.tag_name }}"
          ApplicationVersionParameter: "{{ compute.application_version }}"
          AuthorInstanceProfileParameter: "{{ author.iam_instance_profile }}"
          AuthorLoadBalancerTagNameParameter: "{{ author.load_balancer.tag_name }}"
      tags:
      - create

    - name: Delete AEM Author Stack
      cloudformation:
        stack_name: "{{ compute.stack_moniker }}-{{ author.stack_name }}"
        region: "{{ aws.region }}"
        state: absent
      tags:
      - delete
