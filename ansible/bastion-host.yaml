---
- name: AEM Bastion Host CloudFormation Stack
  hosts: all
  gather_facts: no
  connection: local

  tasks:
    - name: Get AEM Stack VPC
      ec2_vpc_net_facts:
        region: "{{ aws.region }}"
        filters:
          "tag:Name": "{{ ec2_vpc.tag_name }}"
      register: aem_stack_vpc
      tags:
      - create

    - name: Create Bastion Host Stack
      cloudformation:
        stack_name: "{{ bastion_host.stack_name }}"
        state: present
        region: "{{ aws.region }}"
        disable_rollback: true
        template: "../cloudformation/shared/bastion-host.yaml"
        template_parameters:
          VpcIdParameter: "{{ aem_stack_vpc.vpcs.0.id }}"
          AvailabilityZoneAParameter: "{{ aws.availability_zone_a }}"
          AvailabilityZoneBParameter: "{{ aws.availability_zone_b }}"
          BastionHostSubnetACidrBlockParameter: "{{ bastion_host.subnet_a.cidr_block }}"
          BastionHostSubnetATagNameParameter: "{{ bastion_host.subnet_a.cidr_block }}"
          BastionHostSubnetBCidrBlockParameter: "{{ bastion_host.subnet_b.cidr_block }}"
          BastionHostSubnetBTagNameParameter: "{{ bastion_host.subnet_b.cidr_block }}"
          BastionHostRoleNameParameter: "{{ bastion_host.role_name }}"
          BastionHostSecurityGroupTagNameParameter: "{{ bastion_host.security_group_name }}"
          AllAEMInstancesSecurityGroupTagNameParameter: "{{ bastion_host.all_instances_security_group_name }}"
          SecureShellInboundCidrIpParameter: "{{ bastion_host.inbound_cidr_ip }}"
          BastionHostImageParameter: "{{ bastion_host.image_id }}"
          BastionHostInstanceTypeParameter: "{{ bastion_host.instance_type }}"
          ComputeKeyPairNameParameter: "{{ compute.key_pair_name }}"
          BastionHostASGAvailabilityZoneListParameter: "{{ aws.availability_zone_a }}, {{ aws.availability_zone_b }}"
          BastionHostASGMaxSizeParameter: "{{ bastion_host.max_size }}"
          BastionHostASGMinSizeParameter: "{{ bastion_host.min_size }}"
          BastionHostTagNameParameter: "{{ bastion_host.tag_name }}"
          NetworkStackNameParameter: "{{ network.stack_name }}"
      tags:
      - create

    - name: Delete Bastion Host Stack
      cloudformation:
        stack_name: "{{ bastion_host.stack_name }}"
        region: "{{ aws.region }}"
        state: absent
      tags:
      - delete
