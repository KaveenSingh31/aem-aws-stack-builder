---
- name: AEM Publish CloudFormation Stack
  hosts: all
  gather_facts: no
  connection: local

  tasks:
    - name: Create AEM Publish Stack
      cloudformation:
        stack_name: "{{ stack_prefix }}-{{ publish.stack_name }}"
        region: "{{ aws.region }}"
        state: present
        disable_rollback: true
        template: "../../../cloudformation/apps/publish.yaml"
        template_parameters:
          ComputeStackPrefixParameter: "{{ stack_prefix }}"
          PublishInstanceProfileParameter: "{{ publish.instance_profile }}"
          PublishImageParameter: "{{ ami_ids.publish }}"
          PublishInstanceTypeParameter: "{{ publish.instance_type }}"
          ComputeKeyPairNameParameter: "{{ compute.key_pair_name }}"
          PublishASGAvailabilityZoneListParameter: "{{ aws.availability_zone_a }}, {{ aws.availability_zone_b }}"
          PublishASGSubnetListParameter: "{{ aem_vpc.publish_subnet_a_id }}, {{ aem_vpc.publish_subnet_b_id }}"
          PublishASGMaxSizeParameter: "{{ publish.max_size }}"
          PublishASGMinSizeParameter: "{{ publish.min_size }}"
          PublishASGDesiredCapacityParameter: "{{ publish.desired_capacity }}"
          PublishRootVolSizeParameter: "{{ publish.root_vol_size }}"
          PublishDataVolSizeParameter: "{{ publish.data_vol_size }}"
          UsePublishDataVolSnapshotParameter: "{{ snapshots.publish.use_data_vol_snapshot }}"
          PublishDataVolSnapshotParamater: "{{ snapshots.publish.data_vol_snapshot_id }}"
          PublishTagNameParameter: "{{ stack_prefix }}-{{ publish.tag_name }}"
          RolesStackNameParameter: "{{ stack_prefix }}-{{ roles.stack_name }}"
          SecurityGroupsStackNameParameter: "{{ stack_prefix }}-{{ security_groups.stack_name }}"
          MessagingStackNameParameter: "{{ stack_prefix }}-{{ messaging.stack_name }}"
          InboundFromBastionHostSecurityGroupParameter: "{{ compute.inbound_from_bastion_host_security_group }}"
          DataBucketNameParameter: "{{ s3.data_bucket_name }}"
          AemAwsStackProvisionerVersionParameter: "{{ library.aem_aws_stack_provisioner_version }}"
      tags:
      - create

    - name: Check if a Stack Exists
      command: aws cloudformation describe-stacks --stack-name "{{ stack_prefix }}-{{ publish.stack_name }}" --query 'Stacks[].StackName'
      ignore_errors: True
      register: stack_query
      tags:
        - delete

    - name: Report Stack Problem
      debug:
        msg: Stack "{{ stack_prefix }}-{{ publish.stack_name }}" does not exist or some other errors occured
      when:
        "stack_query.rc != 0"
      tags:
        - delete

    - name: Delete AEM Publish Stack
      cloudformation:
        stack_name: "{{ stack_prefix }}-{{ publish.stack_name }}"
        region: "{{ aws.region }}"
        state: absent
      when:
        "stack_query.rc == 0"
      tags:
      - delete
